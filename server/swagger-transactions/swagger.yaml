openapi: 3.0.0
info:
  title: Bank Argent Transactions API Documentation
  description: Contains suggested API endpoints for transactions routes
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/v1q
paths:
  /accounts:
    get:
      summary: Retrieve all accounts and their transactions
      security:
        - BearerAuth: []
      tags: 
        - Transactions Module
      responses:
        '200':
          description: An array of all accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '404':
          description: No accounts found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /accounts/{id}/transactions/{month}:
    get:
      summary: Retrieve all transactions of an account for a specific month
      security:
        - BearerAuth: []
      tags: 
        - Transactions Module
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the account
          schema:
            type: integer
            format: int64
        - in: path
          name: month
          required: true
          description: Month for which transactions are to be retrieved 
          schema:
            type: string
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Transactions not found for the specified account and month
        '500':
          description: Internal Server Error
  /accounts/{id}/transactions/{id}:
    get:
      summary: Retrieve details of a single transaction
      security:
        - BearerAuth: []
      tags: 
        - Transactions Module
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the transaction
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Properties object containing all transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetails'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /accounts/{id}/transactions/{id}/category:
    put:
      summary: Edit the category of a specific transaction
      security:
        - BearerAuth: []
      tags: 
        - Transactions Module
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the transaction
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: Food
      responses:
        '200':
          description: Transaction details successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetails'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /accounts/{id}/transactions/{id}/note:
    post:
      summary: Create a note for a specific transaction
      security:
        - BearerAuth: []
      tags: 
        - Transactions Module
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the transaction
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                noteContent:
                  type: string
                  example: Birth Day
      responses:
        '201':
          description: Note successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionNote'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      summary: Edit the note of a specific transaction
      security:
        - BearerAuth: []
      tags: 
        - Transactions Module
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the transaction
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: Food
                note:
                  type: string
                  example: Anniversary
      responses:
        '200':
          description: note successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetails'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: note not found
        '500':
          description: Internal Server Error
    delete:
      summary: Delete a note for a specific transaction
      security:
        - BearerAuth: []
      tags: 
        - Transactions Module
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the transaction
          schema:
            type: integer
            format: int64
        - in: query
          name: note
          required: true
          description: ID of the note to be deleted
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Note Deleted
        '401':
          description: Unauthorized
        '404':
          description: Note not found
        '500':
          description: Internal Server Error
  
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Argent Bank Checking (x8349)
        createdAt:
          type: string
          format: date-time
          example: "2018-03-16T02:06:09.832Z"
        amount:
          type: integer
          example: 2082.79
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 9
        date:
          type: string
          format: date-time
          example: "2024-03-16T02:06:09.832Z"
        description:
          type: string
          example: Golden Sun Bakery
        amount:
          type: integer
          example: 10
        balance:
          type: integer
          example: 298
        details:
          $ref: '#/components/schemas/TransactionDetails'
    TransactionDetails:
      type: object
      properties:
        transaction-id:
          type: integer
          format: int64
          example: 9
        type:
          type: string
          example: Electronic
        category:
          type: string
          example: Food
        note:
          type: string
          example: Birth Day
    TransactionCategory:
      type: object
      properties:
        category:
          type: string
          example: Food
        id:
          type: integer
          format: int64
          example: 4
    TransactionNote:
      type: object
      properties:
        note:
          type: string
          example: cinema
        id:
          type: integer
          format: int64
          example: 15
